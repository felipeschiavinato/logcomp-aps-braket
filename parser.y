%{
#include "parser.tab.h"
#include <stdio.h>
extern int yylval;

void yyerror(const char *s) {
    extern int yylineno;  // Line number from Flex
    fprintf(stderr, "Error at line %d: %s\n", yylineno, s);
}
%}

%debug

%token EOL LBRACE RBRACE VAR PRINTLN IF ELSE FOR SCANLN TYPE_INT TYPE_STRING TYPE_BRA TYPE_KET TYPE_BRAKET OR AND EQ GT LT PLUS MINUS DOT MUL DIV NOT ASSIGN SEMICOLON LPAREN RPAREN PIPE IDENTIFIER NUMBER STRING_LITERAL 
%start PROGRAM

%%

PROGRAM:
    | PROGRAM STATEMENT
    ;

BLOCK:
    | LBRACE EOL STATEMENT_LIST RBRACE
    ;

STATEMENT:
    ASSIGNMENT EOL
    | PRINT EOL
    | IF_STATEMENT EOL
    | FOR_STATEMENT EOL
    | VARDEC EOL
    | EOL
    ;

VARDEC:
    VAR IDENTIFIER TYPE
    | VAR IDENTIFIER TYPE ASSIGN BOOLEAN_EXPRESSION
    ;

ASSIGNMENT:
    IDENTIFIER ASSIGN BOOLEAN_EXPRESSION
    ;

PRINT:
    PRINTLN LPAREN BOOLEAN_EXPRESSION RPAREN
    ;

IF_STATEMENT:
    IF BOOLEAN_EXPRESSION BLOCK
    | IF BOOLEAN_EXPRESSION BLOCK ELSE BLOCK
    ;

FOR_STATEMENT:
    FOR ASSIGNMENT SEMICOLON BOOLEAN_EXPRESSION SEMICOLON ASSIGNMENT BLOCK
    | FOR VAR IDENTIFIER TYPE ASSIGN BOOLEAN_EXPRESSION SEMICOLON BOOLEAN_EXPRESSION SEMICOLON ASSIGNMENT BLOCK
    ;

BOOLEAN_EXPRESSION:
    BOOLEAN_TERM
    | BOOLEAN_EXPRESSION OR BOOLEAN_TERM
    ;

BOOLEAN_TERM:
    RELATIVE_EXPRESSION
    | BOOLEAN_TERM AND RELATIVE_EXPRESSION
    ;

RELATIVE_EXPRESSION:
    EXPRESSION
    | EXPRESSION EQ EXPRESSION
    | EXPRESSION GT EXPRESSION
    | EXPRESSION LT EXPRESSION
    ;

EXPRESSION:
    TERM
    | EXPRESSION PLUS TERM
    | EXPRESSION MINUS TERM
    | EXPRESSION DOT TERM
    ;

TERM:
    FACTOR
    | TERM MUL FACTOR
    | TERM DIV FACTOR
    ;

FACTOR:
    PLUS FACTOR
    | MINUS FACTOR
    | NOT FACTOR
    | NUMBER
    | STRING_LITERAL
    | IDENTIFIER
    | SCANLN LPAREN RPAREN
    | LT NUMBER PIPE
    | PIPE NUMBER GT
    | LT NUMBER PIPE NUMBER GT      
    ;

TYPE:
    TYPE_INT
    | TYPE_STRING
    | TYPE_BRA
    | TYPE_BRAKET
    | TYPE_KET
    ;

STATEMENT_LIST:
    | STATEMENT_LIST STATEMENT
    ;


%%

int main(void) {
    yydebug = 0;  // Activate Bison debugging
    return yyparse();
}